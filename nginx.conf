# nginx/nginx.conf

# Define um 'pool' de servidores upstream (nossa aplicação Next.js)
upstream nextjs_app {
    # 'web' é o nome do serviço do Next.js no nosso docker-compose.yml
    # O Docker irá resolver 'web' para o IP interno do contêiner da aplicação
    server web:3000;
}

server {
    # O Nginx vai ouvir na porta 80 dentro do contêiner
    listen 80;
    server_name localhost; # Você pode mudar isso para seu domínio em produção

    location / {
        # Repassa a requisição para o pool 'nextjs_app'
        proxy_pass http://nextjs_app;

        # Define cabeçalhos importantes para o proxy reverso
        # Isso garante que a aplicação Next.js receba informações corretas
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Otimização: Servir arquivos estáticos do Next.js diretamente (opcional, mas recomendado)
    # Esta regra captura os arquivos de build estáticos e os serve com cache.
    location /_next/static/ {
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        
        # Repassa para o app, mas você pode adicionar regras de cache aqui
        proxy_pass http://nextjs_app;
    }
}